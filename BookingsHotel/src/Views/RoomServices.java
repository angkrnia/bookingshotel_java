/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Views;

import Core.Database;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author angga
 */
public final class RoomServices extends javax.swing.JFrame {

    /**
     * Creates new form RoomServices
     */
    
    private final Connection conn;
    private PreparedStatement ps;
    private ResultSet rs;
    private Statement stm;
    private final DefaultTableModel tb_model;
    private String bookingId = "";
    private String serviceId = "";
    
    public RoomServices() {
        initComponents();
        
        conn = (Connection) Database.Connect();
        tb_model = (DefaultTableModel) tableServices.getModel();
        
        getItemServices();
        
        order.setVisible(false);
        dlt_btn.setVisible(false);
        
        // mengambil ukuran layar
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        // membuat titik x dan y
        int x = layar.width / 2  - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x, y);
    }
    
    public void getListService(){
        String query = "SELECT bs.id, bs.bookingId,s.serviceName,bs.tgl_service,bs.amount,bs.total "
                    + "FROM bookingservice bs " +
                    "LEFT JOIN bookings b ON b.id=bs.bookingId " +
                    "LEFT JOIN services s ON s.id=bs.serviceId " +
                    "WHERE bs.bookingId=?";
        try {
            ps = conn.prepareStatement(query);
            ps.setString(1, this.bookingId);
            rs = ps.executeQuery();
            tb_model.setNumRows(0);
            dlt_btn.setVisible(false);
            while(rs.next()){
                Object data[] = {
                    rs.getString("bookingId"),
                    rs.getString("serviceName"),
                    rs.getString("tgl_service"),
                    rs.getString("amount"),
                    rs.getString("total"),
                    rs.getInt("id"),
                };
                tb_model.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public void getItemServices(){
        try {
            String query = "SELECT * from services";
            stm = conn.createStatement();
            rs = stm.executeQuery(query);
            tb_model.setNumRows(0);
            jItem.removeAllItems();
            while(rs.next()){
                jItem.addItem(rs.getString("id")+"-"+rs.getString("serviceName")+"-"+rs.getString("price"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        roomValue = new javax.swing.JTextField();
        findroom = new javax.swing.JButton();
        guestName = new javax.swing.JLabel();
        jItem = new javax.swing.JComboBox();
        amountValue = new javax.swing.JTextField();
        selectItem = new javax.swing.JLabel();
        amountText = new javax.swing.JLabel();
        order = new javax.swing.JButton();
        dlt_btn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableServices = new UIResource.Table();
        jPanel4 = new javax.swing.JPanel();
        phome = new javax.swing.JPanel();
        home = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Room Services");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("FIND ROOM CHECKIN TODAY");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));

        roomValue.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel1.add(roomValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 43, 211, 34));

        findroom.setBackground(new java.awt.Color(230, 155, 6));
        findroom.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        findroom.setForeground(new java.awt.Color(255, 255, 255));
        findroom.setText("Search");
        findroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findroomActionPerformed(evt);
            }
        });
        jPanel1.add(findroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 90, 110, 38));

        guestName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        guestName.setText("....");
        jPanel1.add(guestName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jItem.setBackground(new java.awt.Color(230, 155, 6));
        jItem.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jItemActionPerformed(evt);
            }
        });
        jPanel1.add(jItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 43, 220, 34));

        amountValue.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        amountValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountValueActionPerformed(evt);
            }
        });
        jPanel1.add(amountValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 43, 63, 34));

        selectItem.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        selectItem.setText("SELECT ITEM");
        jPanel1.add(selectItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 13, -1, -1));

        amountText.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        amountText.setText("AMOUNT");
        jPanel1.add(amountText, new org.netbeans.lib.awtextra.AbsoluteConstraints(505, 13, -1, -1));

        order.setBackground(new java.awt.Color(230, 155, 6));
        order.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        order.setForeground(new java.awt.Color(255, 255, 255));
        order.setText("Order");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });
        jPanel1.add(order, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 90, 301, 38));

        dlt_btn.setBackground(new java.awt.Color(230, 155, 6));
        dlt_btn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        dlt_btn.setForeground(new java.awt.Color(255, 255, 255));
        dlt_btn.setText("Delete");
        dlt_btn.setMaximumSize(new java.awt.Dimension(63, 30));
        dlt_btn.setMinimumSize(new java.awt.Dimension(63, 30));
        dlt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlt_btnActionPerformed(evt);
            }
        });
        jPanel1.add(dlt_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 386, 82, 30));

        tableServices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Service Name", "Date", "Amount", "Price Total"
            }
        ));
        tableServices.setFillsViewportHeight(true);
        tableServices.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tableServices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableServicesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableServices);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 560, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 580, 430));

        jPanel4.setBackground(new java.awt.Color(230, 155, 6));
        jPanel4.setPreferredSize(new java.awt.Dimension(940, 60));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        phome.setBackground(new java.awt.Color(230, 155, 6));
        phome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phomeMouseClicked(evt);
            }
        });
        phome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        home.setText("<");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                homeMouseReleased(evt);
            }
        });
        phome.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        jPanel4.add(phome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 60, 60));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Room Services");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 60));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jItemActionPerformed

    private void amountValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountValueActionPerformed

    private void findroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findroomActionPerformed
        // TODO add your handling code here:
        String roomNumber = roomValue.getText();
        try {
            String query = "SELECT * FROM bookings b " +
                        "LEFT JOIN rooms r ON r.id=b.roomId " +
                        "WHERE r.roomNumber=? " +
                        "AND b.status='Checking In'";
            ps = conn.prepareStatement(query);
            ps.setString(1, roomNumber);
            rs = ps.executeQuery();
            if(rs.next()){
                order.setVisible(true);
                guestName.setText(rs.getString("guestName"));
                this.bookingId = rs.getString("b.id");
                getListService();
            } else {
                guestName.setText("Not Found");
                dlt_btn.setVisible(false);
                order.setVisible(false);
                tb_model.setNumRows(0);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_findroomActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed
        // TODO add your handling code here:
        String[] items = jItem.getSelectedItem().toString().split("-");
        this.serviceId = items[0];
        
        if(this.bookingId == null || this.serviceId == null || amountValue.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Input cannot be empty.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Calendar cal=Calendar.getInstance();
        SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd");
        
        String query = "INSERT INTO bookingservice VALUES(null,?,?,?,?,?)";
        try {
            ps = conn.prepareStatement(query);
            ps.setString(1, this.bookingId);
            ps.setString(2, this.serviceId);
            ps.setString(3, format.format(cal.getTime()));
            ps.setString(4, amountValue.getText());
            ps.setInt(5, Integer.parseInt(amountValue.getText())*Integer.parseInt(items[2]));
            if(ps.executeUpdate() > 0){
                JOptionPane.showMessageDialog(null, "Room service has successfull ordered!");
                getListService();
            }
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"Insert failed",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_orderActionPerformed

    private void dlt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlt_btnActionPerformed
        // TODO add your handling code here:
        int row = tableServices.getSelectedRow();
        
        if(row < 0){
            return;
        }
        
        String b_id = tb_model.getValueAt(row, 5).toString();
        
        // CONFIRM DELETE
        int del = JOptionPane.showConfirmDialog(null, "Apakah anda yakin?", "Confirm", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(del != 0){
            return;
        }
        
        try {
            String query = "DELETE FROM bookingservice WHERE id=?";
            ps = conn.prepareStatement(query);
            ps.setString(1, b_id);
            
            if(ps.executeUpdate() > 0){
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                getListService();
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"Delete failed",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_dlt_btnActionPerformed

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        //Home ad = new Home();
        //ad.setVisible(true);
        dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void homeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseEntered
        // TODO add your handling code here:
        home.setForeground(new java.awt.Color(230,155,6));
        phome.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_homeMouseEntered

    private void homeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseExited
        // TODO add your handling code here:
        home.setForeground(new java.awt.Color(255, 255, 255));
        phome.setBackground(new java.awt.Color(230,155,6));
    }//GEN-LAST:event_homeMouseExited

    private void homeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMousePressed
        // TODO add your handling code here:
        phome.setBackground(Color.orange);
    }//GEN-LAST:event_homeMousePressed

    private void homeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseReleased
        // TODO add your handling code here:
        phome.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_homeMouseReleased

    private void phomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phomeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_phomeMouseClicked

    private void tableServicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableServicesMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tableServices.getSelectedRow();
        if(selectedRowIndex >= 0){
            dlt_btn.setVisible(true);
        }
    }//GEN-LAST:event_tableServicesMouseClicked
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomServices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RoomServices().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountText;
    private javax.swing.JTextField amountValue;
    private javax.swing.JButton dlt_btn;
    private javax.swing.JButton findroom;
    private javax.swing.JLabel guestName;
    private javax.swing.JLabel home;
    private javax.swing.JComboBox jItem;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton order;
    private javax.swing.JPanel phome;
    private javax.swing.JTextField roomValue;
    private javax.swing.JLabel selectItem;
    private UIResource.Table tableServices;
    // End of variables declaration//GEN-END:variables
}
